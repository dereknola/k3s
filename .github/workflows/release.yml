name: K3s Release

on:
  release:
    types: [published] # Run only when a release is published

permissions:
  contents: write     # Needed to write release assets
  packages: write     # Needed to push image to GHCR

jobs:
  build-amd64:
    name: Build Binary AMD64
    uses: ./.github/workflows/build-k3s.yaml # Path to your reusable workflow
    with:
      cache: '' # No cache for release builds
      upload-build: true

  build-arm64:
    name: Build Binary ARM64
    uses: ./.github/workflows/build-k3s.yaml
    with:
      arch: arm64
      cache: ''
      upload-build: true

  build-arm:
    name: Build Binary ARM
    uses: ./.github/workflows/build-k3s.yaml
    with:
      arch: arm
      cache: ''
      upload-build: true

  push-release-image:
    name: Build and Push Multi-Arch Image
    runs-on: ubuntu-latest
    needs: [build-amd64, build-arm64, build-arm]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ghcr.io/${{ github.repository_owner }}/k3s
          flavor: latest=false
          tags: |
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
      
      - name: "Download K3s build"
        uses: actions/download-artifact@v4
        with:
          pattern: k3s*
          path: ./dist/artifacts
          merge-multiple: true

      - name: Prepare build folder
        run: |
          mkdir -p ./build/out
          cp ./dist/artifacts/data-* ./build/out
          ls -l ./build/out

      - name: Build and push K3s runtime image
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./package/Dockerfile
          platforms: linux/amd64,linux/arm64,linux/arm/v7
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          build-args: |
            DRONE_TAG=${{ github.ref_name }}

  upload-release-airgap:
    name: Build Airgap Package for ${{ matrix.arch }}
    runs-on: ubuntu-latest # Runs on standard runner, docker pulls with --platform
    permissions: 
      contents: write # Needed to update release with assets
    strategy:
      matrix:
        arch: [amd64, arm64, arm] # Add other architectures if needed

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Install Dependencies
        run: sudo apt-get update -y && sudo apt-get install -y zstd pigz

      - name: Create Airgap Package (${{ matrix.arch }})
        env:
          # Set ARCH based on matrix value for use in filenames
          ARCH: ${{ matrix.arch }}
          OUTPUT_DIR: ./dist/artifacts
          PLATFORM: ${{ matrix.arch == 'arm' && 'linux/arm/v7' || format('linux/{0}', matrix.arch) }}
        
        run: |
          mkdir -p ${OUTPUT_DIR}
          airgap_image_file='scripts/airgap/image-list.txt'
          if [ ! -f "$airgap_image_file" ]; then
            echo "Airgap image list not found at $airgap_image_file"
            exit 1
          fi
          images=$(cat "${airgap_image_file}")

          images=$(cat "${airgap_image_file}")
          xargs -n1 docker pull --platform $PLATFORM <<< "${images}"

          echo "Saving images to tarball..."
          docker save ${images} -o ${OUTPUT_DIR}/k3s-airgap-images-${ARCH}.tar

          echo "Compressing tarball with zstd..."
          zstd --no-progress -T0 -f -16 --long=25 ${OUTPUT_DIR}/k3s-airgap-images-${ARCH}.tar -o ${OUTPUT_DIR}/k3s-airgap-images-${ARCH}.tar.zst

          echo "Compressing tarball with pigz..."
          pigz -v -c ${OUTPUT_DIR}/k3s-airgap-images-${ARCH}.tar > ${OUTPUT_DIR}/k3s-airgap-images-${ARCH}.tar.gz

          if [ "${ARCH}" = "amd64" ]; then
            cp "${airgap_image_file}" ${OUTPUT_DIR}/k3s-images.txt
          fi

      - name: Upload Assets to Release
        uses: softprops/action-gh-release@v2
        with:
          files: |
            dist/artifacts/k3s-airgap-images*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  upload-release-assets:
    name: Prepare and Upload Release Assets
    permissions: 
      contents: write # Needed to update release with assets
    runs-on: ubuntu-latest
    needs: [build-amd64, build-arm64]
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: "Download Binaries"
      uses: actions/download-artifact@v4
      with:
        pattern: k3s*
        path: ./dist/artifacts
        merge-multiple: true

    - name: Format sha256sum files
      run: |
        for file in ./dist/artifacts/*.sha256sum; do
          filename=$(basename "$file")
          if [[ "$filename" == *"-arm64.sha256sum" ]]; then
            mv "$file" "./dist/artifacts/sha256sum-arm64.txt"
          elif [[ "$filename" == *"-arm.sha256sum" ]]; then
            mv "$file" "./dist/artifacts/sha256sum-armhf.txt"
          else
            mv "$file" "./dist/artifacts/sha256sum-amd64.txt"
          fi
        done
    
    - name: Upload Assets to Release
      uses: softprops/action-gh-release@v2.2.1
      with:
        files: |
          dist/artifacts/k3s*
          dist/artifacts/sha256sum*
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}