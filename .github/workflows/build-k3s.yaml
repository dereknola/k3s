name: Build K3s

on: 
  workflow_call:
    inputs:
      arch:
        type: string
        description: 'Architecture to build (ubuntu-latest or ubuntu-24.04-arm)'
        default: 'ubuntu-latest'
      os:
        type: string
        description: 'Target OS (linux or windows)'
        default: 'linux'
      upload-image:
        type: boolean
        required: false
        default: false
      cache:
        type: string
        description: 'Cache mode: "read", "write", or empty for no cache'
        required: false
        default: ''

# Note that is workflow requires the following permissions:
#   contents: read
# If using the cache: write option, you will need:
#   packages: write
# If using the cache: read option, you will need:
#   packages: read



jobs:
  build:
    name: Build K3s
    runs-on: ${{ inputs.arch }}
    timeout-minutes: 20
    env:
      BIN_EXT: ${{ inputs.os == 'windows' && '.exe' || '' }}
      ARTIFACT_EXT: ${{ inputs.os == 'windows' && '-windows' || (contains(inputs.arch, 'arm') && '-arm64' || '') }}
      GOOS: ${{ inputs.os }}
    steps:
    - name: Checkout K3s
      uses: actions/checkout@v4
    
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Determine Git Version Info
      id: git_vars
      run: |
        source ./scripts/git_version.sh
        {
          echo "git_tag=${GIT_TAG}"
          echo "tree_state=${TREE_STATE}"
          echo "commit=${COMMIT}"
          echo "dirty=${DIRTY}"
        } >> "$GITHUB_OUTPUT"

    - name: Login to GitHub Container Registry
      if: inputs.cache == 'write'
      uses: docker/login-action@v3
      with:
        registry: ghcr.io
        username: ${{ github.repository_owner }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Build K3s Binary
      env:
          DOCKER_BUILD_SUMMARY: false 
      uses: docker/build-push-action@v6
      with:
        context: .
        file: ./Dockerfile.local
        target: result
        # Defined actions like this don't ingest GITHUB_ENV, so use outputs
        # and manual set the build arguments
        build-args: |
          GIT_TAG=${{ steps.git_vars.outputs.git_tag }}
          TREE_STATE=${{ steps.git_vars.outputs.tree_state }}
          COMMIT=${{ steps.git_vars.outputs.commit }}
          DIRTY=${{ steps.git_vars.outputs.dirty }}
        cache-from: ${{ inputs.cache != '' && format('type=registry,ref=ghcr.io/{0}:cache', github.repository) || '' }}
        cache-to: ${{ inputs.cache == 'write' && format('type=registry,ref=ghcr.io/{0}:cache,mode=max', github.repository) || '' }}
        push: false
        provenance: mode=min
        outputs: type=local,dest=.

    - name: Caculate binary checksum
      run: sha256sum dist/artifacts/k3s${{ env.BIN_EXT }} | sed 's|dist/artifacts/||' > dist/artifacts/k3s${{ env.BIN_EXT }}.sha256sum
    
    - name: Build K3s image
      if: inputs.upload-image == true && inputs.os == 'linux'
      run: ./scripts/package-image
      
    - name: "Save K3s image"
      if: inputs.upload-image == true && inputs.os == 'linux'
      run: docker image save rancher/k3s -o ./dist/artifacts/k3s-image.tar
      
    - name: "Upload K3s Artifacts"
      uses: actions/upload-artifact@v4
      with:
        name: k3s${{ env.ARTIFACT_EXT }}
        path: dist/artifacts/k3s*